plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "me.champeau.jmh" version "0.7.2"
    id 'jacoco'
}

group 'org.tbank'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'stc/jmh']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

jmh {
    zip64 = true
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    implementation 'ch.qos.logback:logback-classic:1.4.14'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.aspectj:aspectjweaver'

    implementation 'org.example:annotation-starter:1.0-SNAPSHOT'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0'

    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    testImplementation "org.wiremock:wiremock-standalone:3.6.0"

    testImplementation 'io.github.hakky54:logcaptor:2.9.3'

    testImplementation "org.testcontainers:testcontainers:1.20.2"
    testImplementation "org.testcontainers:junit-jupiter:1.20.2"
    testImplementation "org.wiremock:wiremock-standalone:3.6.0"
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation "org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-13"

    implementation 'org.openjdk.jmh:jmh-core:1.37'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    implementation 'org.openjdk.jmh:jmh-generator-bytecode:1.37'

    implementation 'org.apache.kafka:kafka-clients:3.4.0'

    implementation 'org.springframework.amqp:spring-rabbit:2.4.9'

    implementation 'org.testcontainers:kafka:1.17.6'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    includes: ['org/tbank/hw5/**'],
                    excludes: ['org/tbank/hw5/dto/**', 'org/tbank/hw5/exception/**', 'org/tbank/hw5/model/**']
            )
        }))
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
}

check {
    dependsOn jacocoTestCoverageVerification
}